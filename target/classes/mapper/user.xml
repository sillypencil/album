<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.User">
    <resultMap id="user_type" type="com.bing.user.User">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="avatarPath" column="avatarPath"/>
        <result property="followNum" column="followNum"/>
        <result property="fansNum" column="fansNum"/>
        <result property="favorNum" column="favorNum"/>
        <result property="collectNum" column="collectNum"/>
        <result property="notifyNum" column="notifyNum"/>
        <result property="registerTime" column="registerTime"/>
        <collection property="leaderIds" javaType="ArrayList" column="id" ofType="java.lang.Integer"
                    select="mapper.User.getLeaderIdsByUserId"/>
        <collection property="followerIds" javaType="ArrayList" column="id" ofType="java.lang.Integer"
                    select="mapper.User.getFollowerIdsByUserId"/>
    </resultMap>

    <resultMap id="user_simple" type="com.bing.user.User">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="avatarPath" column="avatarPath"/>
        <result property="followNum" column="followNum"/>
        <result property="fansNum" column="fansNum"/>
        <collection property="albums" javaType="ArrayList" column="id" ofType="com.bing.image.Album"
                    select="mapper.Album.getAlbumsByUserId"/>
    </resultMap>

    <select id="getUserById" parameterType="int" resultMap="user_type">
        select * from user where id = #{id}
    </select>

    <select id="getUsersByIds" resultMap="user_type">
        select * from user where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getLeaderIdsByUserId" parameterType="int" resultType="java.lang.Integer">
        select leaderId from user_follow where followerId = #{id}
    </select>

    <select id="getFollowerIdsByUserId" parameterType="int" resultType="java.lang.Integer">
        select followerId from user_follow where leaderId = #{id}
    </select>

    <select id="getUserByLogin" parameterType="map" resultMap="user_type">
        select * from user where account = #{account} and password = #{password}
    </select>

    <select id="isFRIEND"  parameterType="map" resultType="java.lang.Integer">
        select count(*) from user_follow where followerId = #{followerId} and leaderId = #{leaderId}
    </select>

    <insert id="addUser" parameterType="com.bing.user.User">
        insert into user(
        account, password, nickname
        ) value(
        #{account}, #{password}, #{nickname}
        )
    </insert>

    <update id="changePassword" parameterType="com.bing.user.User">
        update user set
        password = #{password}
        where id = #{id}
    </update>

    <update id="changeNickname" parameterType="com.bing.user.User">
        update user set
        nickname = #{nickname}
        where id = #{id}
    </update>

    <update id="uploadAvatar" parameterType="com.bing.user.User">
        update user set
        avatarPath = #{avatarPath}
        where id = #{id}
    </update>

    <insert id="follow" parameterType="map">
        insert into user_follow(
        followerId, leaderId
        ) value(
        #{followerId}, #{leaderId}
        )
    </insert>

    <update id="followNumIncrement" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.followNum = u2.followNum + 1
        where u1.id = #{id}
    </update>


    <update id="fansNumIncrement" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.fansNum = u2.fansNum + 1
        where u1.id = #{id}
    </update>

    <delete id="cancelFollow" parameterType="map">
        delete from user_follow where followerId = #{followerId} and leaderId = #{leaderId}
    </delete>

    <update id="followNumDecrease" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.followNum = u2.followNum - 1
        where u1.id = #{id}
    </update>

    <update id="fansNumDecrease" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.fansNum = u2.fansNum - 1
        where u1.id = #{id}
    </update>


    <update id="favorNumIncrement" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.favorNum = u2.favorNum + 1
        where u1.id = #{id}
    </update>

    <update id="favorNumDecrease" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.favorNum = u2.favorNum - 1
        where u1.id = #{id}
    </update>

    <update id="collectNumIncrement" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.collectNum = u2.collectNum + 1
        where u1.id = #{id}
    </update>

    <update id="collectNumDecrease" parameterType="int">
        update user u1 join user u2 on u1.id = u2.id set
        u1.collectNum = u2.collectNum - 1
        where u1.id = #{id}
    </update>

</mapper>